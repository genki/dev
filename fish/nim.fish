# nim
# Autogenerated from man page /usr/local/share/man/man1/nim.1
complete -c nim -s p -l path:PATH -d 'add path to search paths'
complete -c nim -s d -d 'define a conditional symbol (Optionally: Define the value for that symbol, se…'
complete -c nim -s u -l undef:SYMBOL -d 'undefine a conditional symbol'
complete -c nim -s f -l forceBuild:on -d 'force rebuilding of all modules'
complete -c nim -l stackTrace:on -d 'turn stack tracing on|off'
complete -c nim -l lineTrace:on -d 'turn line tracing on|off'
complete -c nim -l threads:on -d 'turn support for multi-threading on|off'
complete -c nim -s x -l checks:on -d 'turn all runtime checks on|off'
complete -c nim -s a -l assertions:on -d 'turn assertions on|off'
complete -c nim -l opt:none -d 'optimize not at all or for speed|size Note: use -d:release for a release buil…'
complete -c nim -l debugger:native -d 'Use native debugger (gdb)'
complete -c nim -l app:console -d 'generate a console app|GUI app|DLL|static library'
complete -c nim -s r -l run -d 'run the compiled program with given arguments'
complete -c nim -l eval:cmd -d 'evaluates nim code directly; e. g'
complete -c nim -l fullhelp -d 'show all command line switches'
complete -c nim -s h -l help -d 'show this help'
complete -c nim -s v -l version -d 'show detailed version information'

complete -f -c nim -n '__fish_use_subcommand' -a compile -d 'compile project with default code generator (C)'
complete -f -c nim -n '__fish_use_subcommand' -a c -d 'compile project with default code generator (C)'
complete -f -c nim -n '__fish_use_subcommand' -a r -d 'compile to $nimcache/projname, run with [arguments]
                            using backend specified by `--backend` (default: c)
'
complete -f -c nim -n '__fish_use_subcommand' -a doc -d 'generate the documentation for inputfile for
                            backend specified by `--backend` (default: c)'
